<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LWyTNgCUeQAAAABJRU5ErkJggg==
</value>
  </data>
</root>